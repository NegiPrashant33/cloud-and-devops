pipeline {
  agent {
    label 'Jenkins-Agent'
  }
  tools {
    jdk 'Java17'
    maven 'Maven3'
  }
  environment {
  	 APP_NAME = "spring-boot-app"
  	 RELEASE = "1.0.0"
  	 DOCKER_USER = "negiprashant33"
  	 DOCKER_PASS = 'dockerhub'
  	 IMAGE_NAME = "${DOCKER_USER}" + "/" + "${APP_NAME}"
  	 IMAGE_TAG = "${RELEASE}-${BUILD_NUMBER}"
  	 JENKINS_API_TOKEN = credentials("JENKINS_API_TOKEN")
  }
  stages {
    stage('Cleanup Workspace') {
        steps {
            sh 'cd cicd'
            cleanWs()
        }
    }
    stage('Checkout from SCM') {
        steps {
            git branch: 'main', credentialsId: 'github', url: 'https://github.com/NegiPrashant33/cloud-and-devops'
        }
    }
    stage('Build Application') {
        steps {
            sh 'ls -ltr'
            sh 'cd cicd && mvn clean package'
        }
    }
    stage('Test Application') {
        steps {
            sh 'cd cicd && mvn test'
        }
    }
    stage('SonarQube Analysis') {
        steps {
            script {
                    withSonarQubeEnv(installationName: 'sonarqube-server', credentialsId: 'jenkins-sonarqube-token') {
                        sh 'cd cicd && mvn sonar:sonar'
                    }
            }
        }
    }
    stage('Quality Gate') {
    	steps {
    		script {
    			waitForQualityGate abortPipeline: false, credentialsId: 'jenkins-sonarqube-token'
    		}
    	}
    }
    stage("Build and Push Docker image") {
    	steps {
    		script {
    			dir('cicd') {
                    docker.withRegistry('', DOCKER_PASS) {
                        docker_image = docker.build "${IMAGE_NAME}"
                    }
                    docker.withRegistry('', DOCKER_PASS) {
                        docker_image.push("${IMAGE_TAG}")
                        docker_image.push('latest')
                    }
                }
    		}
    	}
    }
    stage("Trivy Scan") {
        steps {
            script {
                dir('cicd') {
                    sh "docker run -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image ${IMAGE_NAME}:${IMAGE_TAG} --no-progress --scanners vuln --exit-code 0 --severity HIGH,CRITICAL --format table"
                }
            }
        }
    }
    stage('Cleanup Artifacts') {
        steps {
            script {
                dir('cicd') {
                    sh "docker rmi ${IMAGE_NAME}:${IMAGE_TAG}"
                    sh "docker rmi ${IMAGE_NAME}:latest"
                }
            }
        }
    }
    stage('Trigger CD pipeline') {
        steps {
            script {
                sh "curl -v -k --user prashant:${JENKINS_API_TOKEN} -X POST -H 'cache-control: no-cache' -H 'content-type: application/x-www-form-urlencoded' --data 'IMAGE_TAG=${IMAGE_TAG}' 'ec2-52-55-120-231.compute-1.amazonaws.com:8080/job/springboot-app-cd/buildWithParameters?token=cd-token'"
            }
        }
    }
  }
}